{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup'; // import '../App.css';\n\nimport './knob4.css';\nimport logo from \"../logo.svg\";\nimport ring1 from '../assets/img/ring1.png';\nimport ring2 from '../assets/img/ring2.png';\nimport ring3 from '../assets/img/ring3.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown, faCaretLeft, faCaretRight, faTimesCircle, faCompass, faCode, faCodeBranch, faArchive, faExternalLinkAlt, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport Controls from './controls';\nimport RingInfo from './ringInfo';\nimport RingInfoClick from './ringInfo2';\n\nclass Knob4 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rings: [1, 2, 3],\n      selectedRing: 1,\n      selectedRingName: 'planet',\n      rot1: 360,\n      rot2: 360,\n      rot3: 360,\n      currentRot: null,\n      canvasClass1: 'canvas1',\n      canvasClass2: 'canvas2',\n      canvasClass3: 'canvas3',\n      planet: null,\n      sign: null,\n      house: null,\n      planetArray: ['empty', 'ascendant', 'sun', 'moon', 'mercury', 'venus', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune', 'pluto', 'north node'],\n      signArray: ['empty', 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn', 'aquarius', 'pisces'],\n      houseArray: ['empty', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th'],\n      ringClickInfo: {\n        ring: '',\n        coords: {\n          x: '',\n          y: ''\n        },\n        target: ''\n      },\n      clickInfoState: false,\n      planetInterpArray: ['planetWord1', 'planetWord2', 'planetWord3', 'planetWord4', 'planetWord5', 'planetWord6'],\n      signInterpArray: ['signWord1', 'signWord2', 'signWord3', 'signWord4', 'signWord5'],\n      houseInterpArray: ['houseWord1', 'houseWord2', 'houseWord3', 'houseWord4', 'houseWord5']\n    };\n\n    this.canvasListeners = () => {\n      let canvas1 = this.canvasRef1.current;\n      let canvas2 = this.canvasRef2.current;\n      let canvas3 = this.canvasRef3.current;\n      canvas1.addEventListener(\"click\", e => {\n        // console.log('planet click',e);\n        let mousePos = this.getMousePos(canvas1, e);\n        console.log('planet ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'planet',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        }; // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n\n        this.setClickInfo(clickInfo); // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n      });\n      canvas2.addEventListener(\"click\", e => {\n        // console.log('sign click',e);\n        let mousePos = this.getMousePos(canvas2, e);\n        console.log('sign ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'sign',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        }; // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n\n        this.setClickInfo(clickInfo); // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n      });\n      canvas3.addEventListener(\"click\", e => {\n        // console.log('house click',e);\n        let mousePos = this.getMousePos(canvas3, e);\n        console.log('house ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'house',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        }; // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n\n        this.setClickInfo(clickInfo); // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n      });\n    };\n\n    this.setClickInfo = args => {\n      console.log('setting click info');\n      this.setState({\n        clickInfoState: true,\n        ringClickInfo: args\n      });\n    };\n\n    this.closeClickInfo = () => {\n      this.clickInfoState = false; // this.setState({\n      //   clickInfoState: false\n      // })\n    };\n\n    this.getMousePos = (canvas, evt) => {\n      let rect = canvas.getBoundingClientRect();\n      return {\n        x: evt.clientX - rect.left,\n        y: evt.clientY - rect.top\n      };\n    };\n\n    this.controlsInput = args => {\n      console.log('controlsInput');\n\n      if (args.type === 'select') {\n        this.selectRing(args.value);\n      } else if (args.type === 'rotate') {\n        this.rotateRing(args.value);\n      } else if (args.type === 'select2') {\n        this.selectRing2(args.value);\n      }\n    };\n\n    this.selectRing2 = args => {\n      console.log('selecting ring 2', args);\n      this.selectedRing = args;\n      this.setState({\n        selectedRing: args\n      });\n      this.resetHighlights();\n      this.ringNameUpdate();\n    };\n\n    this.selectRing = args => {\n      let currentRing = this.state.selectedRing;\n      console.log('selecting ring');\n      console.log('1a', this.selectedRing);\n      console.log('2a', this.state.selectedRing);\n\n      if (args === 'next') {\n        if (currentRing === 3) {\n          currentRing = 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        } else {\n          currentRing = currentRing + 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        }\n      }\n\n      if (args === 'prev') {\n        if (currentRing === 1) {\n          currentRing = 3;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        } else {\n          currentRing = currentRing - 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        }\n      }\n\n      console.log('1b', this.selectedRing);\n      console.log('2b', this.state.selectedRing);\n      this.resetHighlights();\n      this.ringNameUpdate();\n    };\n\n    this.ringNameUpdate = () => {\n      switch (this.selectedRing) {\n        case 1:\n          {\n            this.setState({\n              selectedRingName: 'planet'\n            });\n            break;\n          }\n\n        case 2:\n          {\n            this.setState({\n              selectedRingName: 'sign'\n            });\n            break;\n          }\n\n        case 3:\n          {\n            this.setState({\n              selectedRingName: 'house'\n            });\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    };\n\n    this.resetHighlights = () => {\n      console.log('1c', this.selectedRing);\n      console.log('2c', this.state.selectedRing);\n\n      if (this.selectedRing === 1) {\n        this.setState({\n          canvasClass1: 'canvas1 borderedRing',\n          canvasClass2: 'canvas2',\n          canvasClass3: 'canvas3'\n        });\n      }\n\n      if (this.selectedRing === 2) {\n        this.setState({\n          canvasClass2: 'canvas2 borderedRing',\n          canvasClass1: 'canvas1',\n          canvasClass3: 'canvas3'\n        });\n      }\n\n      if (this.selectedRing === 3) {\n        this.setState({\n          canvasClass3: 'canvas3 borderedRing',\n          canvasClass2: 'canvas2',\n          canvasClass1: 'canvas1'\n        });\n      }\n    };\n\n    this.rotateRing = args => {\n      console.log('rotating ring');\n\n      if (args === 'right') {\n        let newRot;\n\n        if (this.state.selectedRing === 1) {\n          newRot = this.state.rot1 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot1 = newRot;\n          this.setState({\n            rot1: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 2) {\n          newRot = this.state.rot2 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot2 = newRot;\n          this.setState({\n            rot2: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 3) {\n          newRot = this.state.rot3 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot3 = newRot;\n          this.setState({\n            rot3: newRot\n          });\n        }\n\n        this.drawRotated(newRot);\n      }\n\n      if (args === 'left') {\n        let newRot;\n\n        if (this.state.selectedRing === 1) {\n          newRot = this.state.rot1 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot1 = newRot;\n          this.setState({\n            rot1: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 2) {\n          newRot = this.state.rot2 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot2 = newRot;\n          this.setState({\n            rot2: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 3) {\n          newRot = this.state.rot3 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot3 = newRot;\n          this.setState({\n            rot3: newRot\n          });\n        }\n\n        this.drawRotated(newRot);\n      } // this.checkStats();\n\n    };\n\n    this.checkStats = () => {\n      console.log('checking stats');\n      const rings = [1, 2, 3];\n\n      for (const elem of rings) {\n        let inc = this['rot' + elem] / 30;\n        console.log(elem, inc);\n\n        switch (elem) {\n          case 1:\n            {\n              console.log('planet @', this.state.planetArray[inc]);\n              this.planet = this.state.planetArray[inc]; // this.setState({\n              //   planet: this.state.planetArray[inc],\n              // })\n\n              break;\n            }\n\n          case 2:\n            {\n              console.log('sign @', this.state.signArray[inc]);\n              this.sign = this.state.signArray[inc]; // this.setState({\n              //   sign: this.state.signArray[inc],\n              // })\n\n              break;\n            }\n\n          case 3:\n            {\n              console.log('house @', this.state.houseArray[inc]);\n              this.house = this.state.houseArray[inc]; // this.setState({\n              //   house: this.state.houseArray[inc],\n              // })\n\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n      } // **** CLEAR Interpretation w/ every check status ****\n\n\n      let toInterpret = [];\n\n      for (const elem of this.activeRings) {\n        if (elem === 1) {\n          toInterpret.push('planet');\n        }\n\n        if (elem === 2) {\n          toInterpret.push('sign');\n        }\n\n        if (elem === 3) {\n          toInterpret.push('house');\n        }\n      }\n\n      console.log('generate interpretation for ', toInterpret);\n      let interpretation = [{\n        key: 'planet',\n        values: []\n      }, {\n        key: 'sign',\n        values: []\n      }, {\n        key: 'house',\n        values: []\n      }];\n\n      for (const elem of toInterpret) {\n        if (elem === 'planet') {\n          let dictionary = this.state[elem + 'InterpArray'];\n          dictionary = dictionary.sort(() => Math.random() - 0.5);\n          let selection = dictionary.slice(0, 5);\n\n          for (const elem of interpretation) {\n            if (elem.key === 'planet') {\n              elem.values.push(selection);\n            }\n          }\n        }\n\n        if (elem === 'sign') {\n          let dictionary = this.state[elem + 'InterpArray'];\n          dictionary = dictionary.sort(() => Math.random() - 0.5);\n          let selection = dictionary.slice(0, 5);\n\n          for (const elem of interpretation) {\n            if (elem.key === 'sign') {\n              elem.values.push(selection);\n            }\n          }\n        }\n\n        if (elem === 'house') {\n          let dictionary = this.state[elem + 'InterpArray'];\n          dictionary = dictionary.sort(() => Math.random() - 0.5);\n          let selection = dictionary.slice(0, 5);\n\n          for (const elem of interpretation) {\n            if (elem.key === 'house') {\n              elem.values.push(selection);\n            }\n          }\n        }\n      }\n\n      console.log('...finalInterpretation...', interpretation);\n    };\n\n    this.drawRotated = degrees => {\n      // console.log('draw',this.state.selectedRing,'draw',degrees);\n      // console.log('drawing rotated',degrees,this.state.selectedRing)\n      const canvas = this['canvasRef' + this.state.selectedRing + ''].current;\n      const context = canvas.getContext('2d');\n      const image = this.refs['image' + this.state.selectedRing];\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.save();\n      context.translate(canvas.width / 2, canvas.height / 2);\n      context.rotate(degrees * Math.PI / 180);\n      context.drawImage(image, -image.width / 2, -image.width / 2);\n      context.restore();\n      this.checkStats();\n    };\n\n    this.toggleRing = () => {\n      console.log('toggling ring'); // console.log(this.state.selectedRing,this.selectedRing);\n\n      let toToggle = this.selectedRing;\n      let index = this.activeRings.indexOf(toToggle); // console.log('fluff',this.activeRings,this.activeRings.includes(toToggle),index)\n\n      if (this.activeRings.includes(toToggle) === true) {\n        this.activeRings.splice(index, 1);\n      } else {\n        this.activeRings.push(toToggle);\n      } // console.log('gruff',this.activeRings);\n\n\n      this.checkStats();\n    };\n\n    this.rot = this.state.rot;\n    this.canvasRef1 = /*#__PURE__*/React.createRef();\n    this.canvasRef2 = /*#__PURE__*/React.createRef();\n    this.canvasRef3 = /*#__PURE__*/React.createRef();\n    this.selectedRing = 1;\n    this.planet = 'north nodex';\n    this.sign = 'pisces';\n    this.house = '12th';\n    this.rot1 = 360;\n    this.rot2 = 360;\n    this.rot3 = 360;\n    this.clickInfoState = false;\n    this.ringClickInfo = {\n      ring: '',\n      coords: {\n        x: '',\n        y: ''\n      },\n      target: ''\n    };\n    this.activeRings = [1, 2, 3];\n  }\n\n  componentDidUpdate() {// this.checkStats();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha', e.key); // this.canvasListeners();\n    });\n    this.setState({\n      currentRot: 0\n    });\n    this.resetHighlights();\n    const canvas1 = this.canvasRef1.current;\n    const canvas2 = this.canvasRef2.current;\n    const canvas3 = this.canvasRef3.current;\n    const context1 = canvas1.getContext('2d');\n    const context2 = canvas2.getContext('2d');\n    const context3 = canvas3.getContext('2d');\n    const img1 = this.refs.image1;\n    const img2 = this.refs.image2;\n    const img3 = this.refs.image3;\n\n    img3.onload = function () {\n      context1.drawImage(img1, canvas1.width / 2 - img1.width / 2, canvas1.height / 2 - img1.width / 2);\n      context2.drawImage(img2, canvas2.width / 2 - img2.width / 2, canvas2.height / 2 - img2.width / 2);\n      context3.drawImage(img3, canvas3.width / 2 - img3.width / 2, canvas3.height / 2 - img3.width / 2);\n    };\n\n    this.checkStats();\n    this.canvasListeners();\n  }\n\n  componentWillUnmount() {} // canvas.addEventListener(\"click\", function (evt) {\n  //     var mousePos = this.getMousePos(canvas, evt);\n  //     alert(mousePos.x + ',' + mousePos.y);\n  // }, false);\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"KnobBoxTop\",\n      children: [/*#__PURE__*/_jsxDEV(RingInfo, {\n        planet: this.planet,\n        sign: this.sign,\n        house: this.house,\n        selectedRingName: this.state.selectedRingName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RingInfoClick, {\n        data: this.state.ringClickInfo,\n        closeClickInfo: this.closeClickInfo,\n        state: this.clickInfoState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvasBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointerBox\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretDown,\n            className: \"pointerIcon\",\n            size: \"5x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvasBox2\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"750\",\n            height: \"750\",\n            ref: this.canvasRef3,\n            className: this.state.canvasClass3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"525\",\n            height: \"525\",\n            ref: this.canvasRef2,\n            className: this.state.canvasClass2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"325\",\n            height: \"325\",\n            ref: this.canvasRef1,\n            className: this.state.canvasClass1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controlsBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring1,\n            className: \"mainKnob\",\n            ref: \"image1\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring2,\n            className: \"mainKnob\",\n            ref: \"image2\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring3,\n            className: \"mainKnob\",\n            ref: \"image3\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {\n            controlsInput: this.controlsInput,\n            ringToggle: this.toggleRing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Knob4;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js"],"names":["React","Component","Link","NavLink","Knob","Button","Row","Col","Image","Container","ListGroup","ring1","ring2","ring3","FontAwesomeIcon","faCaretUp","faCaretDown","faCaretLeft","faCaretRight","faTimesCircle","faCompass","faCode","faCodeBranch","faArchive","faExternalLinkAlt","faEllipsisH","Controls","RingInfo","RingInfoClick","Knob4","constructor","props","state","rings","selectedRing","selectedRingName","rot1","rot2","rot3","currentRot","canvasClass1","canvasClass2","canvasClass3","planet","sign","house","planetArray","signArray","houseArray","ringClickInfo","ring","coords","x","y","target","clickInfoState","planetInterpArray","signInterpArray","houseInterpArray","canvasListeners","canvas1","canvasRef1","current","canvas2","canvasRef2","canvas3","canvasRef3","addEventListener","e","mousePos","getMousePos","console","log","clickInfo","setClickInfo","args","setState","closeClickInfo","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","controlsInput","type","selectRing","value","rotateRing","selectRing2","resetHighlights","ringNameUpdate","currentRing","newRot","drawRotated","checkStats","elem","inc","toInterpret","activeRings","push","interpretation","key","values","dictionary","sort","Math","random","selection","slice","degrees","context","getContext","image","refs","clearRect","width","height","save","translate","rotate","PI","drawImage","restore","toggleRing","toToggle","index","indexOf","includes","splice","rot","createRef","componentDidUpdate","componentDidMount","document","context1","context2","context3","img1","image1","img2","image2","img3","image3","onload","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\n// import '../App.css';\nimport './knob4.css';\nimport logo from '../logo.svg';\nimport ring1 from '../assets/img/ring1.png'\nimport ring2 from '../assets/img/ring2.png'\nimport ring3 from '../assets/img/ring3.png'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCaretUp,\n  faCaretDown,\n  faCaretLeft,\n  faCaretRight,\n  faTimesCircle,\n  faCompass,\n  faCode,\n  faCodeBranch,\n  faArchive,\n  faExternalLinkAlt,\n  faEllipsisH,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Controls from './controls'\nimport RingInfo from './ringInfo'\nimport RingInfoClick from './ringInfo2'\n\n\nclass Knob4 extends Component {\n\n  state = {\n    rings: [1,2,3],\n    selectedRing: 1,\n    selectedRingName: 'planet',\n    rot1: 360,\n    rot2: 360,\n    rot3: 360,\n    currentRot: null,\n    canvasClass1: 'canvas1',\n    canvasClass2: 'canvas2',\n    canvasClass3: 'canvas3',\n    planet: null,\n    sign: null,\n    house: null,\n    planetArray: [\n      'empty',\n      'ascendant',\n      'sun',\n      'moon',\n      'mercury',\n      'venus',\n      'mars',\n      'jupiter',\n      'saturn',\n      'uranus',\n      'neptune',\n      'pluto',\n      'north node',\n    ],\n    signArray: [\n      'empty',\n      'aries',\n      'taurus',\n      'gemini',\n      'cancer',\n      'leo',\n      'virgo',\n      'libra',\n      'scorpio',\n      'sagittarius',\n      'capricorn',\n      'aquarius',\n      'pisces',\n    ],\n    houseArray: [\n      'empty',\n      '1st',\n      '2nd',\n      '3rd',\n      '4th',\n      '5th',\n      '6th',\n      '7th',\n      '8th',\n      '9th',\n      '10th',\n      '11th',\n      '12th',\n    ],\n    ringClickInfo: {\n      ring: '',\n      coords: {\n        x: '',\n        y: '',\n      },\n      target: '',\n    },\n    clickInfoState: false,\n    planetInterpArray: [\n      'planetWord1',\n      'planetWord2',\n      'planetWord3',\n      'planetWord4',\n      'planetWord5',\n      'planetWord6',\n    ],\n    signInterpArray: [\n      'signWord1',\n      'signWord2',\n      'signWord3',\n      'signWord4',\n      'signWord5',\n    ],\n    houseInterpArray: [\n      'houseWord1',\n      'houseWord2',\n      'houseWord3',\n      'houseWord4',\n      'houseWord5',\n    ],\n  }\n\n  constructor(props) {\n    super(props);\n    this.rot = this.state.rot;\n    this.canvasRef1 = React.createRef();\n    this.canvasRef2 = React.createRef();\n    this.canvasRef3 = React.createRef();\n    this.selectedRing = 1;\n    this.planet = 'north nodex';\n    this.sign = 'pisces';\n    this.house = '12th';\n    this.rot1 = 360;\n    this.rot2 = 360;\n    this.rot3 = 360;\n    this.clickInfoState = false;\n    this.ringClickInfo = {\n      ring: '',\n      coords: {\n        x: '',\n        y: '',\n      },\n      target: '',\n    };\n    this.activeRings = [1,2,3];\n  }\n\n  componentDidUpdate() {\n\n    // this.checkStats();\n  }\n\n  componentDidMount() {\n\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha',e.key);\n      // this.canvasListeners();\n    });\n\n    this.setState({\n      currentRot: 0,\n    })\n\n    this.resetHighlights();\n\n    const canvas1 = this.canvasRef1.current;\n    const canvas2 = this.canvasRef2.current;\n    const canvas3 = this.canvasRef3.current;\n    const context1 = canvas1.getContext('2d');\n    const context2 = canvas2.getContext('2d');\n    const context3 = canvas3.getContext('2d');\n    const img1 = this.refs.image1;\n    const img2 = this.refs.image2;\n    const img3 = this.refs.image3;\n\n    img3.onload=function(){\n      context1.drawImage(img1,canvas1.width/2-img1.width/2,canvas1.height/2-img1.width/2);\n      context2.drawImage(img2,canvas2.width/2-img2.width/2,canvas2.height/2-img2.width/2);\n      context3.drawImage(img3,canvas3.width/2-img3.width/2,canvas3.height/2-img3.width/2);\n    }\n\n    this.checkStats();\n    this.canvasListeners()\n\n  }\n\n  canvasListeners = () => {\n    let canvas1 = this.canvasRef1.current;\n    let canvas2 = this.canvasRef2.current;\n    let canvas3 = this.canvasRef3.current;\n\n    canvas1.addEventListener(\"click\", e => {\n      // console.log('planet click',e);\n        let mousePos = this.getMousePos(canvas1, e);\n        console.log('planet ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'planet',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n        this.setClickInfo(clickInfo);\n        // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n    });\n    canvas2.addEventListener(\"click\", e => {\n      // console.log('sign click',e);\n        let mousePos = this.getMousePos(canvas2, e);\n        console.log('sign ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'sign',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n        this.setClickInfo(clickInfo);\n        // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n    });\n    canvas3.addEventListener(\"click\", e => {\n      // console.log('house click',e);\n        let mousePos = this.getMousePos(canvas3, e);\n        console.log('house ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'house',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        // this.setState({\n        //   clickInfoState: true,\n        //   ringClickInfo: clickInfo,\n        // })\n        this.setClickInfo(clickInfo);\n        // this.clickInfoState = true;\n        // this.ringClickInfo = clickInfo;\n    });\n\n\n  }\n\n  setClickInfo = (args) => {\n    console.log('setting click info');\n    this.setState({\n      clickInfoState: true,\n      ringClickInfo: args,\n    })\n  }\n  closeClickInfo = () => {\n    this.clickInfoState = false\n    // this.setState({\n    //   clickInfoState: false\n    // })\n  }\n\n  componentWillUnmount() {\n\n  }\n  // canvas.addEventListener(\"click\", function (evt) {\n  //     var mousePos = this.getMousePos(canvas, evt);\n  //     alert(mousePos.x + ',' + mousePos.y);\n  // }, false);\n\n  getMousePos = (canvas, evt) => {\n    let rect = canvas.getBoundingClientRect();\n    return {\n        x: evt.clientX - rect.left,\n        y: evt.clientY - rect.top\n    };\n}\n\n  controlsInput = (args) => {\n    console.log('controlsInput');\n    if (args.type === 'select') {\n      this.selectRing(args.value);\n    } else if (args.type === 'rotate') {\n      this.rotateRing(args.value)\n    } else if (args.type === 'select2') {\n      this.selectRing2(args.value)\n    }\n  }\n\n  selectRing2 = (args) => {\n    console.log('selecting ring 2',args);\n    this.selectedRing = args\n    this.setState({\n      selectedRing: args\n    })\n\n    this.resetHighlights();\n    this.ringNameUpdate()\n  }\n\n  selectRing = (args) => {\n    let currentRing = this.state.selectedRing;\n    console.log('selecting ring');\n    console.log('1a',this.selectedRing);\n    console.log('2a',this.state.selectedRing);\n\n    if (args === 'next') {\n      if ( currentRing === 3 ) {\n        currentRing = 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      } else {\n        currentRing = currentRing + 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      }\n\n    }\n\n    if (args === 'prev') {\n      if ( currentRing === 1 ) {\n        currentRing = 3;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      } else {\n        currentRing = currentRing - 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      }\n\n    }\n\n    console.log('1b',this.selectedRing);\n    console.log('2b',this.state.selectedRing);\n    this.resetHighlights();\n\n    this.ringNameUpdate()\n\n  }\n\n  ringNameUpdate = () => {\n    switch(this.selectedRing) {\n       case 1: {\n          this.setState({\n            selectedRingName: 'planet',\n          })\n          break;\n       }\n       case 2: {\n          this.setState({\n            selectedRingName: 'sign',\n          })\n          break;\n       }\n       case 3: {\n          this.setState({\n            selectedRingName: 'house',\n          })\n          break;\n       }\n       default: {\n          break;\n       }\n    }\n\n  }\n\n  resetHighlights = () => {\n    console.log('1c',this.selectedRing);\n    console.log('2c',this.state.selectedRing);\n\n    if (this.selectedRing === 1) {\n      this.setState({\n        canvasClass1: 'canvas1 borderedRing',\n        canvasClass2: 'canvas2',\n        canvasClass3: 'canvas3',\n      })\n    }\n    if (this.selectedRing === 2) {\n      this.setState({\n        canvasClass2: 'canvas2 borderedRing',\n        canvasClass1: 'canvas1',\n        canvasClass3: 'canvas3',\n      })\n    }\n    if (this.selectedRing === 3) {\n      this.setState({\n        canvasClass3: 'canvas3 borderedRing',\n        canvasClass2: 'canvas2',\n        canvasClass1: 'canvas1',\n      })\n    }\n\n  }\n\n\n  rotateRing = (args) => {\n    console.log('rotating ring');\n\n    if (args === 'right') {\n      let newRot;\n      if (this.state.selectedRing === 1) {\n        newRot = this.state.rot1+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot1 = newRot;\n        this.setState({\n          rot1: newRot,\n        })\n      }\n      if (this.state.selectedRing === 2) {\n        newRot = this.state.rot2+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot2 = newRot;\n        this.setState({\n          rot2: newRot,\n        })\n      }\n      if (this.state.selectedRing === 3) {\n        newRot = this.state.rot3+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot3 = newRot;\n        this.setState({\n          rot3: newRot,\n        })\n      }\n      this.drawRotated(newRot)\n    }\n\n    if (args === 'left') {\n      let newRot;\n      if (this.state.selectedRing === 1) {\n        newRot = this.state.rot1-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot1 = newRot;\n        this.setState({\n          rot1: newRot,\n        })\n      }\n      if (this.state.selectedRing === 2) {\n        newRot = this.state.rot2-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot2 = newRot;\n        this.setState({\n          rot2: newRot,\n        })\n      }\n      if (this.state.selectedRing === 3) {\n        newRot = this.state.rot3-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot3 = newRot;\n        this.setState({\n          rot3: newRot,\n        })\n      }\n      this.drawRotated(newRot)\n    }\n\n    // this.checkStats();\n  }\n\n  checkStats = () => {\n    console.log('checking stats');\n\n    const rings = [1,2,3];\n    for (const elem of rings) {\n\n      let inc = this.['rot'+ elem]/30;\n      console.log(elem,inc);\n\n      switch(elem) {\n         case 1: {\n           console.log('planet @',this.state.planetArray[inc]);\n            this.planet = this.state.planetArray[inc];\n            // this.setState({\n            //   planet: this.state.planetArray[inc],\n            // })\n            break;\n         }\n         case 2: {\n           console.log('sign @',this.state.signArray[inc]);\n            this.sign = this.state.signArray[inc];\n            // this.setState({\n            //   sign: this.state.signArray[inc],\n            // })\n            break;\n         }\n         case 3: {\n           console.log('house @',this.state.houseArray[inc]);\n            this.house = this.state.houseArray[inc];\n            // this.setState({\n            //   house: this.state.houseArray[inc],\n            // })\n            break;\n         }\n         default: {\n            break;\n         }\n      }\n\n    }\n\n    // **** CLEAR Interpretation w/ every check status ****\n\n    let toInterpret = [];\n    for (const elem of this.activeRings) {\n      if (elem === 1) {\n        toInterpret.push('planet')\n      }\n      if (elem === 2) {\n        toInterpret.push('sign')\n      }\n      if (elem === 3) {\n        toInterpret.push('house')\n      }\n    }\n\n    console.log('generate interpretation for ',toInterpret);\n\n    let interpretation = [\n      {key: 'planet', values: []},\n      {key: 'sign', values: []},\n      {key: 'house', values: []},\n    ]\n\n    for (const elem of toInterpret) {\n      if (elem === 'planet') {\n\n        let dictionary = this.state.[elem+'InterpArray'];\n        dictionary = dictionary.sort(() => Math.random() - 0.5);\n        let selection = dictionary.slice(0,5);\n\n        for (const elem of interpretation) {\n          if (elem.key === 'planet') {\n            elem.values.push(selection)\n          }\n        }\n\n      }\n      if (elem === 'sign') {\n\n        let dictionary = this.state.[elem+'InterpArray'];\n        dictionary = dictionary.sort(() => Math.random() - 0.5);\n        let selection = dictionary.slice(0,5);\n\n        for (const elem of interpretation) {\n          if (elem.key === 'sign') {\n            elem.values.push(selection)\n          }\n        }\n\n      }\n      if (elem === 'house') {\n\n        let dictionary = this.state.[elem+'InterpArray'];\n        dictionary = dictionary.sort(() => Math.random() - 0.5);\n        let selection = dictionary.slice(0,5);\n\n        for (const elem of interpretation) {\n          if (elem.key === 'house') {\n            elem.values.push(selection)\n          }\n        }\n\n      }\n    }\n    console.log('...finalInterpretation...',interpretation);\n\n\n  }\n\n  drawRotated = (degrees) => {\n    // console.log('draw',this.state.selectedRing,'draw',degrees);\n    // console.log('drawing rotated',degrees,this.state.selectedRing)\n\n    const canvas = this.['canvasRef'+this.state.selectedRing+''].current;\n    const context = canvas.getContext('2d');\n    const image = this.refs.['image'+this.state.selectedRing];\n\n    context.clearRect(0,0,canvas.width,canvas.height);\n    context.save();\n    context.translate(canvas.width/2,canvas.height/2);\n    context.rotate(degrees*Math.PI/180);\n    context.drawImage(image,-image.width/2,-image.width/2);\n    context.restore();\n\n    this.checkStats();\n}\n\ntoggleRing = () => {\n  console.log('toggling ring');\n  // console.log(this.state.selectedRing,this.selectedRing);\n  let toToggle = this.selectedRing;\n  let index = this.activeRings.indexOf(toToggle)\n  // console.log('fluff',this.activeRings,this.activeRings.includes(toToggle),index)\n  if (this.activeRings.includes(toToggle) === true) {\n    this.activeRings.splice(index,1)\n  } else {\n    this.activeRings.push(toToggle);\n  }\n  // console.log('gruff',this.activeRings);\n  this.checkStats();\n}\n\n\n  render() {\n\n    return (\n\n\n        <div className=\"KnobBoxTop\">\n\n          <RingInfo\n            planet={this.planet}\n            sign={this.sign}\n            house={this.house}\n            selectedRingName={this.state.selectedRingName}\n          />\n\n\n          <RingInfoClick\n            data={this.state.ringClickInfo}\n            closeClickInfo={this.closeClickInfo}\n            state={this.clickInfoState}\n          />\n\n          <div className=\"canvasBox\">\n            <div className=\"pointerBox\">\n\n              <FontAwesomeIcon icon={faCaretDown} className=\"pointerIcon\" size=\"5x\"/>\n            </div>\n\n            <div className=\"canvasBox2\">\n              <canvas\n                width=\"750\"\n                height=\"750\"\n                ref={this.canvasRef3}\n                className={this.state.canvasClass3}\n              />\n              <canvas\n                width=\"525\"\n                height=\"525\"\n                ref={this.canvasRef2}\n                className={this.state.canvasClass2}\n              />\n              <canvas\n                width=\"325\"\n                height=\"325\"\n                ref={this.canvasRef1}\n                className={this.state.canvasClass1}\n              />\n            </div>\n\n\n            <div className=\"controlsBox\">\n              <img src={ring1} className='mainKnob' ref=\"image1\" alt=\"logo\" />\n              <img src={ring2} className=\"mainKnob\" ref=\"image2\" alt=\"logo\" />\n              <img src={ring3} className=\"mainKnob\" ref=\"image3\" alt=\"logo\" />\n              <Controls\n                controlsInput={this.controlsInput}\n                ringToggle={this.toggleRing}\n              />\n            </div>\n\n          </div>\n\n        </div>\n\n    )\n  }\n\n}\n\nexport default Knob4;\n"]},"metadata":{},"sourceType":"module"}