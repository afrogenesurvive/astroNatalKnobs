{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport '../App.css';\nimport './knob4.css';\nimport logo from \"../logo.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown, faCaretLeft, faCaretRight, faTimesCircle, faCompass, faCode, faCodeBranch, faArchive, faExternalLinkAlt, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport Controls from './controls';\n\nclass Knob4 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRing: null,\n      rot: 45,\n      rotation: 'rotate(' + 45 + 'deg)',\n      style: {\n        transform: 'rotate(45deg)'\n      },\n      rotClass: 'rotOne'\n    };\n\n    this.controlsInput = args => {\n      console.log('controlsInput', args);\n\n      if (args.type = 'select') {\n        this.selectRing(args.value);\n      } else if (args.type = 'rotate') {\n        this.rotateRing(args.value);\n      }\n    };\n\n    this.selectRing = args => {\n      console.log('selecting ring', args);\n    };\n\n    this.rotateRing = args => {\n      console.log('rotating ring', args);\n\n      if (args === 'right') {\n        let newRot = this.state.rot + 30;\n        let newRotation = 'rotate(' + newRot + 'deg)';\n        this.drawRotated(newRot); // this.setState({\n        //   rotClass: 'rotTwo'\n        //   // rot: newRot,\n        //   // rotation: newRotation,\n        // })\n      }\n\n      if (args === 'left') {\n        let newRot = this.state.rot - 30;\n        let newRotation = 'rotate(' + newRot + 'deg)';\n        this.drawRotated(newRot); // this.setState({\n        //   // rot: newRot,\n        //   // rotation: newRotation,\n        // })\n      }\n    };\n\n    this.drawRotated = degrees => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(degrees * Math.PI / 180);\n      ctx.drawImage(image, 0, 3);\n      ctx.restore();\n    };\n\n    this.rot = this.state.rot;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha', e.key);\n    });\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = this.refs.image;\n\n    img.onload = () => {\n      context.drawImage(img, 0, 9);\n    };\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"KnobBoxTop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          width: \"500\",\n          height: \"500\",\n          ref: this.canvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: this.state.rotClass,\n          ref: \"image\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {\n          controlsInput: this.controlsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Knob4;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js"],"names":["React","Component","Link","NavLink","Knob","Button","Row","Col","Image","Container","ListGroup","FontAwesomeIcon","faCaretUp","faCaretDown","faCaretLeft","faCaretRight","faTimesCircle","faCompass","faCode","faCodeBranch","faArchive","faExternalLinkAlt","faEllipsisH","Controls","Knob4","constructor","props","state","selectedRing","rot","rotation","style","transform","rotClass","controlsInput","args","console","log","type","selectRing","value","rotateRing","newRot","newRotation","drawRotated","degrees","ctx","clearRect","canvas","width","height","save","translate","rotate","Math","PI","drawImage","image","restore","canvasRef","createRef","componentDidUpdate","componentDidMount","document","addEventListener","e","key","current","context","getContext","img","refs","onload","componentWillUnmount","render","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport '../App.css';\nimport './knob4.css';\nimport logo from '../logo.svg';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCaretUp,\n  faCaretDown,\n  faCaretLeft,\n  faCaretRight,\n  faTimesCircle,\n  faCompass,\n  faCode,\n  faCodeBranch,\n  faArchive,\n  faExternalLinkAlt,\n  faEllipsisH,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Controls from './controls'\n\n\nclass Knob4 extends Component {\n\n  state = {\n    selectedRing: null,\n    rot: 45,\n    rotation: 'rotate('+45+'deg)',\n    style: {\n      transform: 'rotate(45deg)',\n    },\n    rotClass: 'rotOne',\n  }\n\n  constructor(props) {\n    super(props);\n    this.rot = this.state.rot;\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha',e.key);\n    });\n\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = this.refs.image;\n\n    img.onload = () => {\n      context.drawImage(img,0,9);\n    }\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  controlsInput = (args) => {\n    console.log('controlsInput',args);\n    if (args.type = 'select') {\n        this.selectRing(args.value);\n    } else if (args.type = 'rotate') {\n      this.rotateRing(args.value)\n    }\n  }\n\n  selectRing = (args) => {\n    console.log('selecting ring',args);\n  }\n\n  rotateRing = (args) => {\n    console.log('rotating ring',args);\n    if (args === 'right') {\n      let newRot = this.state.rot+30;\n      let newRotation = 'rotate('+newRot+'deg)';\n      this.drawRotated(newRot)\n      // this.setState({\n      //   rotClass: 'rotTwo'\n      //   // rot: newRot,\n      //   // rotation: newRotation,\n      // })\n    }\n    if (args === 'left') {\n      let newRot = this.state.rot-30;\n      let newRotation = 'rotate('+newRot+'deg)';  this.drawRotated(newRot)\n\n      // this.setState({\n      //   // rot: newRot,\n      //   // rotation: newRotation,\n      // })\n    }\n  }\n\n  drawRotated = (degrees) => {\n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    ctx.save();\n    ctx.translate(canvas.width/2,canvas.height/2);\n    ctx.rotate(degrees*Math.PI/180);\n    ctx.drawImage(image,0,3);\n    ctx.restore();\n}\n\n\n  render() {\n\n    return (\n      <div className=\"KnobBoxTop\">\n\n      <div className=\"App-header\">\n        {\n          // <img src={logo} className={this.state.rotClass} alt=\"logo\" />\n        }\n        <canvas\n          width=\"500\"\n          height=\"500\"\n          ref={this.canvasRef}\n        />\n        <img src={logo} className={this.state.rotClass} ref=\"image\" alt=\"logo\" />\n\n        <Controls\n          controlsInput={this.controlsInput}\n        />\n      </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default Knob4;\n"]},"metadata":{},"sourceType":"module"}