{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup'; // import '../App.css';\n\nimport './knob4.css';\nimport logo from \"../logo.svg\";\nimport ring1 from '../assets/img/ring1.png';\nimport ring2 from '../assets/img/ring2.png';\nimport ring3 from '../assets/img/ring3.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown, faCaretLeft, faCaretRight, faTimesCircle, faCompass, faCode, faCodeBranch, faArchive, faExternalLinkAlt, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport Controls from './controls';\nimport RingInfo from './ringInfo';\nimport RingInfoClick from './ringInfo2';\n\nclass Knob4 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rings: [1, 2, 3],\n      selectedRing: 1,\n      selectedRingName: 'planet',\n      rot1: 360,\n      rot2: 360,\n      rot3: 360,\n      currentRot: null,\n      canvasClass1: 'canvas1',\n      canvasClass2: 'canvas2',\n      canvasClass3: 'canvas3',\n      planet: null,\n      sign: null,\n      house: null,\n      planetArray: ['empty', 'ascendant', 'sun', 'moon', 'mercury', 'venus', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune', 'pluto', 'north node'],\n      signArray: ['empty', 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn', 'aquarius', 'pisces'],\n      houseArray: ['empty', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th'],\n      ringClickInfo: null,\n      clickInfoState: false\n    };\n\n    this.canvasListeners = () => {\n      let canvas1 = this.canvasRef1.current;\n      let canvas2 = this.canvasRef2.current;\n      let canvas3 = this.canvasRef3.current;\n      canvas1.addEventListener(\"click\", e => {\n        console.log('planet click', e);\n        let mousePos = this.getMousePos(canvas1, e);\n        console.log('planet ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'planet',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        };\n        this.setClickInfo(clickInfo);\n      });\n      canvas2.addEventListener(\"click\", e => {\n        console.log('sign click', e);\n        let mousePos = this.getMousePos(canvas2, e);\n        console.log('sign ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'sign',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        };\n        this.setClickInfo(clickInfo);\n      });\n      canvas3.addEventListener(\"click\", e => {\n        console.log('house click', e);\n        let mousePos = this.getMousePos(canvas3, e);\n        console.log('house ring', mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'house',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y\n          },\n          target: ''\n        };\n        this.setClickInfo(clickInfo);\n      });\n    };\n\n    this.setClickInfo = args => {\n      console.log('setting click info');\n      this.setState({\n        clickInfoState: true,\n        ringClickInfo: args\n      });\n    };\n\n    this.getMousePos = (canvas, evt) => {\n      let rect = canvas.getBoundingClientRect();\n      return {\n        x: evt.clientX - rect.left,\n        y: evt.clientY - rect.top\n      };\n    };\n\n    this.controlsInput = args => {\n      console.log('controlsInput');\n\n      if (args.type === 'select') {\n        this.selectRing(args.value);\n      } else if (args.type === 'rotate') {\n        this.rotateRing(args.value);\n      }\n    };\n\n    this.selectRing = args => {\n      let currentRing = this.state.selectedRing;\n      console.log('selecting ring');\n      console.log('1a', this.selectedRing);\n      console.log('2a', this.state.selectedRing);\n\n      if (args === 'next') {\n        if (currentRing === 3) {\n          currentRing = 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        } else {\n          currentRing = currentRing + 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        }\n      }\n\n      if (args === 'prev') {\n        if (currentRing === 1) {\n          currentRing = 3;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        } else {\n          currentRing = currentRing - 1;\n          this.selectedRing = currentRing;\n          this.setState({\n            selectedRing: currentRing\n          });\n        }\n      }\n\n      console.log('1b', this.selectedRing);\n      console.log('2b', this.state.selectedRing);\n      this.resetHighlights();\n      this.ringNameUpdate();\n    };\n\n    this.ringNameUpdate = () => {\n      switch (this.selectedRing) {\n        case 1:\n          {\n            this.setState({\n              selectedRingName: 'planet'\n            });\n            break;\n          }\n\n        case 2:\n          {\n            this.setState({\n              selectedRingName: 'sign'\n            });\n            break;\n          }\n\n        case 3:\n          {\n            this.setState({\n              selectedRingName: 'house'\n            });\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    };\n\n    this.resetHighlights = () => {\n      console.log('1c', this.selectedRing);\n      console.log('2c', this.state.selectedRing);\n\n      if (this.selectedRing === 1) {\n        this.setState({\n          canvasClass1: 'canvas1 borderedRing',\n          canvasClass2: 'canvas2',\n          canvasClass3: 'canvas3'\n        });\n      }\n\n      if (this.selectedRing === 2) {\n        this.setState({\n          canvasClass2: 'canvas2 borderedRing',\n          canvasClass1: 'canvas1',\n          canvasClass3: 'canvas3'\n        });\n      }\n\n      if (this.selectedRing === 3) {\n        this.setState({\n          canvasClass3: 'canvas3 borderedRing',\n          canvasClass2: 'canvas2',\n          canvasClass1: 'canvas1'\n        });\n      }\n    };\n\n    this.rotateRing = args => {\n      console.log('rotating ring');\n\n      if (args === 'right') {\n        let newRot;\n\n        if (this.state.selectedRing === 1) {\n          newRot = this.state.rot1 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot1 = newRot;\n          this.setState({\n            rot1: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 2) {\n          newRot = this.state.rot2 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot2 = newRot;\n          this.setState({\n            rot2: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 3) {\n          newRot = this.state.rot3 + 30;\n\n          if (newRot === 390) {\n            newRot = 30;\n          }\n\n          this.rot3 = newRot;\n          this.setState({\n            rot3: newRot\n          });\n        }\n\n        this.drawRotated(newRot);\n      }\n\n      if (args === 'left') {\n        let newRot;\n\n        if (this.state.selectedRing === 1) {\n          newRot = this.state.rot1 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot1 = newRot;\n          this.setState({\n            rot1: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 2) {\n          newRot = this.state.rot2 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot2 = newRot;\n          this.setState({\n            rot2: newRot\n          });\n        }\n\n        if (this.state.selectedRing === 3) {\n          newRot = this.state.rot3 - 30;\n\n          if (newRot <= 0) {\n            newRot = 360;\n          }\n\n          this.rot3 = newRot;\n          this.setState({\n            rot3: newRot\n          });\n        }\n\n        this.drawRotated(newRot);\n      } // this.checkStats();\n\n    };\n\n    this.checkStats = () => {\n      console.log('checking stats');\n      const rings = [1, 2, 3];\n\n      for (const elem of rings) {\n        let inc = this['rot' + elem] / 30;\n        console.log(elem, inc);\n\n        switch (elem) {\n          case 1:\n            {\n              console.log('planet @', this.state.planetArray[inc]);\n              this.planet = this.state.planetArray[inc]; // this.setState({\n              //   planet: this.state.planetArray[inc],\n              // })\n\n              break;\n            }\n\n          case 2:\n            {\n              console.log('sign @', this.state.signArray[inc]);\n              this.sign = this.state.signArray[inc]; // this.setState({\n              //   sign: this.state.signArray[inc],\n              // })\n\n              break;\n            }\n\n          case 3:\n            {\n              console.log('house @', this.state.houseArray[inc]);\n              this.house = this.state.houseArray[inc]; // this.setState({\n              //   house: this.state.houseArray[inc],\n              // })\n\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n      }\n    };\n\n    this.drawRotated = degrees => {\n      // console.log('draw',this.state.selectedRing,'draw',degrees);\n      // console.log('drawing rotated',degrees,this.state.selectedRing)\n      //select canvas here w/ state selctedRing\n      const canvas = this['canvasRef' + this.state.selectedRing + ''].current;\n      const context = canvas.getContext('2d');\n      const image = this.refs['image' + this.state.selectedRing];\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.save();\n      context.translate(canvas.width / 2, canvas.height / 2);\n      context.rotate(degrees * Math.PI / 180);\n      context.drawImage(image, -image.width / 2, -image.width / 2);\n      context.restore();\n      this.checkStats();\n    };\n\n    this.rot = this.state.rot;\n    this.canvasRef1 = /*#__PURE__*/React.createRef();\n    this.canvasRef2 = /*#__PURE__*/React.createRef();\n    this.canvasRef3 = /*#__PURE__*/React.createRef();\n    this.selectedRing = 1;\n    this.planet = 'north nodex';\n    this.sign = 'pisces';\n    this.house = '12th';\n    this.rot1 = 360;\n    this.rot2 = 360;\n    this.rot3 = 360;\n  }\n\n  componentDidUpdate() {// this.checkStats();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha', e.key); // this.canvasListeners();\n    });\n    this.setState({\n      currentRot: 0\n    });\n    this.resetHighlights();\n    const canvas1 = this.canvasRef1.current;\n    const canvas2 = this.canvasRef2.current;\n    const canvas3 = this.canvasRef3.current;\n    const context1 = canvas1.getContext('2d');\n    const context2 = canvas2.getContext('2d');\n    const context3 = canvas3.getContext('2d');\n    const img1 = this.refs.image1;\n    const img2 = this.refs.image2;\n    const img3 = this.refs.image3;\n\n    img3.onload = function () {\n      context1.drawImage(img1, canvas1.width / 2 - img1.width / 2, canvas1.height / 2 - img1.width / 2);\n      context2.drawImage(img2, canvas2.width / 2 - img2.width / 2, canvas2.height / 2 - img2.width / 2);\n      context3.drawImage(img3, canvas3.width / 2 - img3.width / 2, canvas3.height / 2 - img3.width / 2);\n    };\n\n    this.checkStats();\n    this.canvasListeners();\n  }\n\n  componentWillUnmount() {} // canvas.addEventListener(\"click\", function (evt) {\n  //     var mousePos = this.getMousePos(canvas, evt);\n  //     alert(mousePos.x + ',' + mousePos.y);\n  // }, false);\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"KnobBoxTop\",\n      children: [/*#__PURE__*/_jsxDEV(RingInfo, {\n        planet: this.planet,\n        sign: this.sign,\n        house: this.house,\n        selectedRingName: this.state.selectedRingName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RingInfoClick, {\n        data: this.state.ringClickInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvasBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pointerBox\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretDown,\n            className: \"pointerIcon\",\n            size: \"5x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvasBox2\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"750\",\n            height: \"750\",\n            ref: this.canvasRef3,\n            className: this.state.canvasClass3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"525\",\n            height: \"525\",\n            ref: this.canvasRef2,\n            className: this.state.canvasClass2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: \"325\",\n            height: \"325\",\n            ref: this.canvasRef1,\n            className: this.state.canvasClass1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controlsBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring1,\n            className: \"mainKnob\",\n            ref: \"image1\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring2,\n            className: \"mainKnob\",\n            ref: \"image2\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ring3,\n            className: \"mainKnob\",\n            ref: \"image3\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {\n            controlsInput: this.controlsInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Knob4;","map":{"version":3,"sources":["/Users/pedrojacob/Downloads/AMR/websites/astroNatalKnobs/frontend/src/components/knob4.js"],"names":["React","Component","Link","NavLink","Knob","Button","Row","Col","Image","Container","ListGroup","ring1","ring2","ring3","FontAwesomeIcon","faCaretUp","faCaretDown","faCaretLeft","faCaretRight","faTimesCircle","faCompass","faCode","faCodeBranch","faArchive","faExternalLinkAlt","faEllipsisH","Controls","RingInfo","RingInfoClick","Knob4","constructor","props","state","rings","selectedRing","selectedRingName","rot1","rot2","rot3","currentRot","canvasClass1","canvasClass2","canvasClass3","planet","sign","house","planetArray","signArray","houseArray","ringClickInfo","clickInfoState","canvasListeners","canvas1","canvasRef1","current","canvas2","canvasRef2","canvas3","canvasRef3","addEventListener","e","console","log","mousePos","getMousePos","x","y","clickInfo","ring","coords","target","setClickInfo","args","setState","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","controlsInput","type","selectRing","value","rotateRing","currentRing","resetHighlights","ringNameUpdate","newRot","drawRotated","checkStats","elem","inc","degrees","context","getContext","image","refs","clearRect","width","height","save","translate","rotate","Math","PI","drawImage","restore","rot","createRef","componentDidUpdate","componentDidMount","document","key","context1","context2","context3","img1","image1","img2","image2","img3","image3","onload","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Knob } from \"react-rotary-knob\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\n// import '../App.css';\nimport './knob4.css';\nimport logo from '../logo.svg';\nimport ring1 from '../assets/img/ring1.png'\nimport ring2 from '../assets/img/ring2.png'\nimport ring3 from '../assets/img/ring3.png'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCaretUp,\n  faCaretDown,\n  faCaretLeft,\n  faCaretRight,\n  faTimesCircle,\n  faCompass,\n  faCode,\n  faCodeBranch,\n  faArchive,\n  faExternalLinkAlt,\n  faEllipsisH,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Controls from './controls'\nimport RingInfo from './ringInfo'\nimport RingInfoClick from './ringInfo2'\n\n\nclass Knob4 extends Component {\n\n  state = {\n    rings: [1,2,3],\n    selectedRing: 1,\n    selectedRingName: 'planet',\n    rot1: 360,\n    rot2: 360,\n    rot3: 360,\n    currentRot: null,\n    canvasClass1: 'canvas1',\n    canvasClass2: 'canvas2',\n    canvasClass3: 'canvas3',\n    planet: null,\n    sign: null,\n    house: null,\n    planetArray: [\n      'empty',\n      'ascendant',\n      'sun',\n      'moon',\n      'mercury',\n      'venus',\n      'mars',\n      'jupiter',\n      'saturn',\n      'uranus',\n      'neptune',\n      'pluto',\n      'north node',\n    ],\n    signArray: [\n      'empty',\n      'aries',\n      'taurus',\n      'gemini',\n      'cancer',\n      'leo',\n      'virgo',\n      'libra',\n      'scorpio',\n      'sagittarius',\n      'capricorn',\n      'aquarius',\n      'pisces',\n    ],\n    houseArray: [\n      'empty',\n      '1st',\n      '2nd',\n      '3rd',\n      '4th',\n      '5th',\n      '6th',\n      '7th',\n      '8th',\n      '9th',\n      '10th',\n      '11th',\n      '12th',\n    ],\n    ringClickInfo: null,\n    clickInfoState: false,\n  }\n\n  constructor(props) {\n    super(props);\n    this.rot = this.state.rot;\n    this.canvasRef1 = React.createRef();\n    this.canvasRef2 = React.createRef();\n    this.canvasRef3 = React.createRef();\n    this.selectedRing = 1;\n    this.planet = 'north nodex';\n    this.sign = 'pisces';\n    this.house = '12th';\n    this.rot1 = 360;\n    this.rot2 = 360;\n    this.rot3 = 360;\n  }\n\n  componentDidUpdate() {\n\n    // this.checkStats();\n  }\n\n  componentDidMount() {\n\n    document.addEventListener(\"keypress\", e => {\n      console.log('gotcha',e.key);\n      // this.canvasListeners();\n    });\n\n    this.setState({\n      currentRot: 0,\n    })\n\n    this.resetHighlights();\n\n    const canvas1 = this.canvasRef1.current;\n    const canvas2 = this.canvasRef2.current;\n    const canvas3 = this.canvasRef3.current;\n    const context1 = canvas1.getContext('2d');\n    const context2 = canvas2.getContext('2d');\n    const context3 = canvas3.getContext('2d');\n    const img1 = this.refs.image1;\n    const img2 = this.refs.image2;\n    const img3 = this.refs.image3;\n\n    img3.onload=function(){\n      context1.drawImage(img1,canvas1.width/2-img1.width/2,canvas1.height/2-img1.width/2);\n      context2.drawImage(img2,canvas2.width/2-img2.width/2,canvas2.height/2-img2.width/2);\n      context3.drawImage(img3,canvas3.width/2-img3.width/2,canvas3.height/2-img3.width/2);\n    }\n\n    this.checkStats();\n    this.canvasListeners()\n\n  }\n\n  canvasListeners = () => {\n    let canvas1 = this.canvasRef1.current;\n    let canvas2 = this.canvasRef2.current;\n    let canvas3 = this.canvasRef3.current;\n\n    canvas1.addEventListener(\"click\", e => {\n      console.log('planet click',e);\n        let mousePos = this.getMousePos(canvas1, e);\n        console.log('planet ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'planet',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        this.setClickInfo(clickInfo);\n    });\n    canvas2.addEventListener(\"click\", e => {\n      console.log('sign click',e);\n        let mousePos = this.getMousePos(canvas2, e);\n        console.log('sign ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'sign',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        this.setClickInfo(clickInfo);\n    });\n    canvas3.addEventListener(\"click\", e => {\n      console.log('house click',e);\n        let mousePos = this.getMousePos(canvas3, e);\n        console.log('house ring',mousePos.x + ',' + mousePos.y);\n        let clickInfo = {\n          ring: 'house',\n          coords: {\n            x: mousePos.x,\n            y: mousePos.y,\n          },\n          target: '',\n        }\n        this.setClickInfo(clickInfo);\n    });\n\n\n  }\n\n  setClickInfo = (args) => {\n    console.log('setting click info');\n    this.setState({\n      clickInfoState: true,\n      ringClickInfo: args,\n    })\n  }\n\n  componentWillUnmount() {\n\n  }\n  // canvas.addEventListener(\"click\", function (evt) {\n  //     var mousePos = this.getMousePos(canvas, evt);\n  //     alert(mousePos.x + ',' + mousePos.y);\n  // }, false);\n\n  getMousePos = (canvas, evt) => {\n    let rect = canvas.getBoundingClientRect();\n    return {\n        x: evt.clientX - rect.left,\n        y: evt.clientY - rect.top\n    };\n}\n\n  controlsInput = (args) => {\n    console.log('controlsInput');\n    if (args.type === 'select') {\n      this.selectRing(args.value);\n    } else if (args.type === 'rotate') {\n      this.rotateRing(args.value)\n    }\n  }\n\n  selectRing = (args) => {\n    let currentRing = this.state.selectedRing;\n    console.log('selecting ring');\n    console.log('1a',this.selectedRing);\n    console.log('2a',this.state.selectedRing);\n\n    if (args === 'next') {\n      if ( currentRing === 3 ) {\n        currentRing = 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      } else {\n        currentRing = currentRing + 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      }\n\n    }\n\n    if (args === 'prev') {\n      if ( currentRing === 1 ) {\n        currentRing = 3;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      } else {\n        currentRing = currentRing - 1;\n        this.selectedRing = currentRing;\n        this.setState({\n          selectedRing: currentRing,\n        })\n      }\n\n    }\n\n    console.log('1b',this.selectedRing);\n    console.log('2b',this.state.selectedRing);\n    this.resetHighlights();\n\n    this.ringNameUpdate()\n\n  }\n\n  ringNameUpdate = () => {\n    switch(this.selectedRing) {\n       case 1: {\n          this.setState({\n            selectedRingName: 'planet',\n          })\n          break;\n       }\n       case 2: {\n          this.setState({\n            selectedRingName: 'sign',\n          })\n          break;\n       }\n       case 3: {\n          this.setState({\n            selectedRingName: 'house',\n          })\n          break;\n       }\n       default: {\n          break;\n       }\n    }\n\n  }\n\n  resetHighlights = () => {\n    console.log('1c',this.selectedRing);\n    console.log('2c',this.state.selectedRing);\n\n    if (this.selectedRing === 1) {\n      this.setState({\n        canvasClass1: 'canvas1 borderedRing',\n        canvasClass2: 'canvas2',\n        canvasClass3: 'canvas3',\n      })\n    }\n    if (this.selectedRing === 2) {\n      this.setState({\n        canvasClass2: 'canvas2 borderedRing',\n        canvasClass1: 'canvas1',\n        canvasClass3: 'canvas3',\n      })\n    }\n    if (this.selectedRing === 3) {\n      this.setState({\n        canvasClass3: 'canvas3 borderedRing',\n        canvasClass2: 'canvas2',\n        canvasClass1: 'canvas1',\n      })\n    }\n\n  }\n\n\n  rotateRing = (args) => {\n    console.log('rotating ring');\n\n    if (args === 'right') {\n      let newRot;\n      if (this.state.selectedRing === 1) {\n        newRot = this.state.rot1+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot1 = newRot;\n        this.setState({\n          rot1: newRot,\n        })\n      }\n      if (this.state.selectedRing === 2) {\n        newRot = this.state.rot2+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot2 = newRot;\n        this.setState({\n          rot2: newRot,\n        })\n      }\n      if (this.state.selectedRing === 3) {\n        newRot = this.state.rot3+30;\n        if (newRot === 390 ) {\n          newRot = 30;\n        }\n        this.rot3 = newRot;\n        this.setState({\n          rot3: newRot,\n        })\n      }\n      this.drawRotated(newRot)\n    }\n\n    if (args === 'left') {\n      let newRot;\n      if (this.state.selectedRing === 1) {\n        newRot = this.state.rot1-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot1 = newRot;\n        this.setState({\n          rot1: newRot,\n        })\n      }\n      if (this.state.selectedRing === 2) {\n        newRot = this.state.rot2-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot2 = newRot;\n        this.setState({\n          rot2: newRot,\n        })\n      }\n      if (this.state.selectedRing === 3) {\n        newRot = this.state.rot3-30;\n        if (newRot <= 0) {\n          newRot = 360;\n        }\n        this.rot3 = newRot;\n        this.setState({\n          rot3: newRot,\n        })\n      }\n      this.drawRotated(newRot)\n    }\n\n    // this.checkStats();\n  }\n\n  checkStats = () => {\n    console.log('checking stats');\n\n    const rings = [1,2,3];\n    for (const elem of rings) {\n\n      let inc = this.['rot'+ elem]/30;\n      console.log(elem,inc);\n\n      switch(elem) {\n         case 1: {\n           console.log('planet @',this.state.planetArray[inc]);\n            this.planet = this.state.planetArray[inc];\n            // this.setState({\n            //   planet: this.state.planetArray[inc],\n            // })\n            break;\n         }\n         case 2: {\n           console.log('sign @',this.state.signArray[inc]);\n            this.sign = this.state.signArray[inc];\n            // this.setState({\n            //   sign: this.state.signArray[inc],\n            // })\n            break;\n         }\n         case 3: {\n           console.log('house @',this.state.houseArray[inc]);\n            this.house = this.state.houseArray[inc];\n            // this.setState({\n            //   house: this.state.houseArray[inc],\n            // })\n            break;\n         }\n         default: {\n            break;\n         }\n      }\n\n    }\n\n  }\n\n  drawRotated = (degrees) => {\n    // console.log('draw',this.state.selectedRing,'draw',degrees);\n    // console.log('drawing rotated',degrees,this.state.selectedRing)\n    //select canvas here w/ state selctedRing\n    const canvas = this.['canvasRef'+this.state.selectedRing+''].current;\n    const context = canvas.getContext('2d');\n    const image = this.refs.['image'+this.state.selectedRing];\n\n    context.clearRect(0,0,canvas.width,canvas.height);\n    context.save();\n    context.translate(canvas.width/2,canvas.height/2);\n    context.rotate(degrees*Math.PI/180);\n    context.drawImage(image,-image.width/2,-image.width/2);\n    context.restore();\n\n    this.checkStats();\n}\n\n\n  render() {\n\n    return (\n\n\n        <div className=\"KnobBoxTop\">\n\n          <RingInfo\n            planet={this.planet}\n            sign={this.sign}\n            house={this.house}\n            selectedRingName={this.state.selectedRingName}\n          />\n\n          <RingInfoClick\n            data={this.state.ringClickInfo}\n          />\n\n          <div className=\"canvasBox\">\n            <div className=\"pointerBox\">\n\n              <FontAwesomeIcon icon={faCaretDown} className=\"pointerIcon\" size=\"5x\"/>\n            </div>\n\n            <div className=\"canvasBox2\">\n              <canvas\n                width=\"750\"\n                height=\"750\"\n                ref={this.canvasRef3}\n                className={this.state.canvasClass3}\n              />\n              <canvas\n                width=\"525\"\n                height=\"525\"\n                ref={this.canvasRef2}\n                className={this.state.canvasClass2}\n              />\n              <canvas\n                width=\"325\"\n                height=\"325\"\n                ref={this.canvasRef1}\n                className={this.state.canvasClass1}\n              />\n            </div>\n\n\n            <div className=\"controlsBox\">\n              <img src={ring1} className='mainKnob' ref=\"image1\" alt=\"logo\" />\n              <img src={ring2} className=\"mainKnob\" ref=\"image2\" alt=\"logo\" />\n              <img src={ring3} className=\"mainKnob\" ref=\"image3\" alt=\"logo\" />\n              <Controls\n                controlsInput={this.controlsInput}\n              />\n            </div>\n\n          </div>\n\n        </div>\n\n    )\n  }\n\n}\n\nexport default Knob4;\n"]},"metadata":{},"sourceType":"module"}